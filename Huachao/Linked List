#2 Add Two Numbers
https://leetcode.com/problems/add-two-numbers/description/

Code: 
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode preHead(0), *p = &preHead;
        int preVal = 0;
        while (l1||l2||preVal){
            int sum = (l1?l1->val:0) + (l2?l2->val:0) + preVal;
            preVal = sum/10;
            p->next = new ListNode(sum%10);
            p = p->next;
            l1 = l1?l1->next:l1;
            l2 = l2?l2->next:l2;
        }
        return preHead.next;
    }
};
Comment: clean the code

#21. Merge Two Sorted Lists
https://leetcode.com/problems/merge-two-sorted-lists/description/

Code:
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode preHead(0), *p = &preHead;
        while(l1||l2){
            int newVal = 0;
            if (!l2 || (l1 && l1->val < l2->val)){
                newVal = l1->val;
                l1 = l1->next;
            }else {
                newVal = l2->val;
                l2 = l2->next;
            }
            p->next = new ListNode(newVal);
            p = p->next;
        }
        
        return preHead.next;
    }
};
