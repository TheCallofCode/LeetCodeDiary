35. Search Insert Postition

Description:
Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.
You may assume no duplicates in the array.
Example 1:
Input: [1,3,5,6], 5
Output: 2
Example 2:
Input: [1,3,5,6], 2
Output: 1
Example 3:
Input: [1,3,5,6], 7
Output: 4
Example 4:
Input: [1,3,5,6], 0
Output: 0

Hints:
Corner Case: target < nums[0], target > nums[n]

Code:
class Solution:
    def searchInsert(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        left = 0
        right = len(nums)-1
        if target <= nums[left]:
            return left
        elif target > nums[right]:
            return right+1
        while(left<right):
            mid = left + (right-left)//2
            if nums[mid] < target:
                left = mid +1
            elif nums[mid] > target:
                right = mid
            else:
                return mid
        return left

Performance:
Time Complaxity: O(logn), Space Complaxity: O(1)  Beats: 50%