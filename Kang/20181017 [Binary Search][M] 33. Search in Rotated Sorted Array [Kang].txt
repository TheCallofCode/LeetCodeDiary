33. Search in Rotated Sorted Array

Description:
Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.
(i.e., [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2]).
You are given a target value to search. If found in the array return its index, otherwise return -1.
You may assume no duplicate exists in the array.
Your algorithm's runtime complexity must be in the order of O(log n).
Example 1:
Input: nums = [4,5,6,7,0,1,2], target = 0
Output: 4
Example 2:
Input: nums = [4,5,6,7,0,1,2], target = 3
Output: -1

Hints:

Code:
class Solution:
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        if len(nums) == 0:
            return -1
        left = 0 
        right = len(nums)-1
        while left < right:
            mid = left +(right-left)//2
            if target == nums[mid]:
                return mid
            elif ( nums[left] < nums[mid] and target < nums[mid] and target >= nums[left] ) or  ( nums[left] > nums[mid] and not (target <= nums[right] and target > nums[mid]) ):
                right = mid
            else:
                left = mid + 1
        if target == nums[left]:
            return left
        else:
            return -1

Performance:
Time Complaxity: O(logn), Space Complaxity: O(1)  Beats: 82%

Code:
class Solution:
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        left = 0 
        right = len(nums)-1
        while left <= right:
            mid = left +(right-left)//2
            if target == nums[mid]:
                return mid
            elif ( nums[left] < nums[mid] and target < nums[mid] and target >= nums[left] ) or  ( nums[left] > nums[mid] and not (target <= nums[right] and target > nums[mid]) ):
                right = mid-1
            else:
                left = mid + 1
        return -1

Performance:
Time Complaxity: O(logn), Space Complaxity: O(1)  Beats: 100%