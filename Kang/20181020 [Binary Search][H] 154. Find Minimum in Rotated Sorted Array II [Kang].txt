154. Find Minimum in Rotated Sorted Array II

Description:
Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.
(i.e.,  [0,1,2,4,5,6,7] might become  [4,5,6,7,0,1,2]).
Find the minimum element.
The array may contain duplicates.
Example 1:
Input: [1,3,5]
Output: 1
Example 2:
Input: [2,2,2,0,1]
Output: 0

Hints:

Code:
class Solution:
    def findMin(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if not nums:
            return 0
        left = 0
        right = len(nums)-1
        while left<right:
            mid = left+(right-left)//2
            if nums[right]==nums[left]==nums[mid]:
                left +=1
            elif nums[right]<=nums[left]<=nums[mid]:
                left = mid+1
            else:
                right = mid
        return nums[left]

Performance:
Time Complaxity: O(logn), Space Complaxity: O(1)  Beats: 98%