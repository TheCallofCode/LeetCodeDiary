21. Merge Two Sorted List 

Description:
Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.
Example:
Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4

Hints:
node = list1 or list2 #get which is not None

Code:
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def mergeTwoLists(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        head = ListNode(0)
        node = head
        while(l1 and l2): 
            if l1.val < l2.val:
                node.next = ListNode(l1.val)
                node = node.next
                l1 = l1.next
            else:
                node.next = ListNode(l2.val)
                node = node.next
                l2 = l2.next                
        if not l1:
            node.next = l2
        else:
            node.next = l1
        return head.next    

Performance:
Time Complaxity: O(M+N), Space Complaxity: O(M+N)  Beats: 72%