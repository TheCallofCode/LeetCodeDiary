141. Linked List Cycle

Description:
Given a linked list, determine if it has a cycle in it.

Follow up:
Can you solve it without using extra space?

Hints:
Cycle detection.

Code:
public class Solution {
    public boolean hasCycle(ListNode head) {
        ListNode fast = head, slow = head;
        while(fast != null && fast.next != null)
        {
            slow = slow.next;
            fast = fast.next.next;
            if(slow == fast)
                return true;
        }
        return false;
    }
}

Performance:
O(n) O(1) beats 99%